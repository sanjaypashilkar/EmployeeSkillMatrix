@model SkillMatrix.Model.vwCertificationReport
@{
    var levelReport = Model.PaginatedLevelReport;
    var counter = 1;

    SkillMatrix.Model.Pager pager = new SkillMatrix.Model.Pager();
    int pageNo = 0;
    if (Model.Pager != null)
    {
        pager = Model.Pager;
        pageNo = pager.CurrentPage;
        counter = pager.RecSkip + 1;
    }
}

@if (levelReport.Count > 0)
{
    <Center>
        <div class="d-flex justify-content-center">
            <div class="font-weight-bold">@string.Format("Certification Report", Model.CertificationFilter.StartDate.ToShortDateString(), Model.CertificationFilter.EndDate.ToShortDateString())</div>
            <div class="ml-3">
                <button id="download" class="btn btn-secondary btn-sm" type="button" onclick="Excel()" title="Download Report">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                        <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z" />
                        <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z" />
                    </svg>
                </button>
            </div>
        </div>
    </Center>
    await Html.RenderPartialAsync("_Pager", pager);
    <div class="table-responsive">
        <table cellspacing="0" cellpadding="0" border="1" class="table table-striped table-bordered table-hover">
            <thead class="thead-light">
                <tr>
                    <th>Sr.No</th>
                    @*<th>AccountType</th>*@
                    <th>Agent Name</th>
                    <th>Employee ID</th>
                    <th>Postion</th>
                    <th>Date Hired</th>
                    @*<th>Status</th>*@
                    <th>Tenure</th>
                    <th>Certification Date</th>
                    <th>OSVC</th>
                    <th>OA</th>
                    <th>EM</th>
                    <th>Product/System Average</th>
                    <th>Product & System Certification Level</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in levelReport)
                {
                    <tr>
                        <td> @counter</td>
                        @*<td> @item.AccountType</td>*@
                        <td> @item.AgentName</td>
                        <td> @item.EmployeeId</td>
                        <td> @item.Position</td>
                        <td> @item.HiredDate.ToShortDateString()</td>
                        @*<td> @item.Status</td>*@
                        <td> @item.Tenure</td>
                        <td> @item.CertificationDate.ToShortDateString()</td>
                        <td> @item.OSVC_Score</td>
                        <td> @item.OA_Score</td>
                        <td> @item.EM_Score</td>                        
                        <td> @item.Average</td>
                        <td> @item.Level</td>
                    </tr>
                    counter++;
                }
            </tbody>
        </table>
    </div>
    await Html.RenderPartialAsync("_Pager", pager);
}
else
{
    <Center><b>@string.Format("Information not available")</b></Center>
}